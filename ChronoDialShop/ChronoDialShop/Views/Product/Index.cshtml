@model List<Product>

<section class="desktop-productsection">
         <h1>Products</h1>
         <div class="shopfullcontainer">
            <div class="filtercontainer">
                <div class="filterwordcontainer">Filter:</div>
                <div class="eachfiltercontainer">
                    <div class="eachfilterinnercontainer">Price <i class="fa-solid fa-chevron-down"></i></div>
                    <ul class="numberinputcontainer">
                        <li class="numberinputinnercontainer">
                            <input type="number" placeholder="Min">
                            <input type="number" placeholder="Max">
                        </li>
                    </ul>
                </div>
                <div class="eachfiltercontainer">
                    <div class="eachfilterinnercontainer">Brands <i class="fa-solid fa-chevron-down"></i> </div>
                    <ul class="eachfilterlist">

                        @await Component.InvokeAsync(nameof(Brand))

                    </ul>
                </div>
                <div class="eachfiltercontainer">
                    <div class="eachfilterinnercontainer">Band Material <i class="fa-solid fa-chevron-down"></i></div>
                    <ul class="eachfilterlist">
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Avqa</span> </label> </li>
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Bvfd</span> </label> </li>
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Ccs</span> </label> </li>
                    </ul>
                </div>
                <div class="eachfiltercontainer">
                    <div class="eachfilterinnercontainer">Inner Color <i class="fa-solid fa-chevron-down"></i></div>
                    <ul class="eachfilterlist">

                        @*@await Component.InvokeAsync(nameof(InnerColor))*@

                    </ul>
                </div>
                <div class="eachfiltercontainer">
                    <div class="eachfilterinnercontainer">Visualization <i class="fa-solid fa-chevron-down"></i></div>
                    <ul class="eachfilterlist">
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Avqa</span> </label> </li>
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Bvfd</span> </label> </li>
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Ccs</span> </label> </li>
                    </ul>
                </div>
                <div class="eachfiltercontainer">
                    <div class="eachfilterinnercontainer">Vendor <i class="fa-solid fa-chevron-down"></i></div>
                    <ul class="eachfilterlist">
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Avqa</span> </label> </li>
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Bvfd</span> </label> </li>
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Ccs</span> </label> </li>
                    </ul>
                </div>
                @*<div class="eachfiltercontainer">
                    <div class="eachfilterinnercontainer">Gender <i class="fa-solid fa-chevron-down"></i></div>
                    <ul class="eachfilterlist">
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Avqa</span> </label> </li>
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Bvfd</span> </label> </li>
                        <li> <label for=""> <input type="checkbox" name="" id=""> <span>Ccs</span> </label> </li>
                    </ul>
                </div>*@
            </div>
            <div class="shopfullcontainerright">
                <div class="sortedfunctionscontaier">
                    <div></div>
                    <div class="sort-count">
                        <div class="sortallcontainer">
                            <div class="sortcontainer"><p>Sort:</p> <i class="fa-solid fa-chevron-down"></i></div>
                            <ul class="allsortlist hidden">
                                <li>
                                    <label for="Filter-title-ascending-1">
                                        <input type="radio" id="Filter-title-ascending-1"> <span>Alphabetically, A-Z</span>
                                    </label>
                                </li>
                                <li>
                                    <label for="Filter-title-descending-2">
                                        <input type="radio" id="Filter-title-descending-2"> <span>Alphabetically, Z-A</span>
                                    </label>
                                </li>
                                <li>
                                    <label for="Filter-price-ascending-3">
                                        <input type="radio" id="Filter-price-ascending-3"> <span>Price, low to high</span>
                                    </label>
                                </li>
                                <li>
                                    <label for="Filter-price-descending-4">
                                        <input type="radio" id="Filter-price-descending-4"> <span>Price, high to low</span>
                                    </label>
                                </li>
                                <li>
                                    <label for="Filter-rating-ascending-5">
                                        <input type="radio" id="Filter-rating-ascending-5"> <span>Rating, low to high</span>
                                    </label>
                                </li>
                                <li>
                                    <label for="Filter-rating-descending-6">
                                        <input type="radio" id="Filter-rating-descending-6"> <span>Rating, low to high</span>
                                    </label
                                ></li>
                            </ul>
                        </div>
                        <p> <span>18</span> Products </p>
                    </div>
                </div>
                <div class="resultcontainer grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 productscontainer">
                    
                   @await Component.InvokeAsync("ProductMain");

                </div>
                @*<div class="paginationcontainer">
                    <ul>
                        @if (Model.CurrentPage != 1)
                        {
                             <li class="page-item">
                                 <a class="innercontainer page-link" asp-action="Index" asp-controller="Product" asp-route-page="@(Model.CurrentPage-1)">
                                       <i class="fa-solid fa-angle-left"></i>
                                 </a>
                             </li>
                        }
                
                        @for (int i = 1; i <= Model.TotalPageCount; i++)
                        {
                            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                                <a class="innercontainer page-link" asp-action="Index" asp-controller="Product" asp-route-page="@i">@i</a>
                            </li>
                        }
                
                        @if (Model.CurrentPage != Model.TotalPageCount)
                        {
                            <li class="page-item">
                                <a class="innercontainer page-link" asp-action="Index" asp-controller="Product" asp-route-page="@(Model.CurrentPage+1)">
                                    <i class="fa-solid fa-angle-right"></i>
                                </a>
                            </li>
                        }
                
                    </ul>
                </div>*@
            </div>
        </div>
</section>


@section Scripts {
    <script>
        var cat = document.querySelectorAll(".brand-item");

        cat.forEach(brand => {
            var id = brand.dataset.id;
            
            brand.addEventListener("click", (e) => {
                console.log(id);
                e.preventDefault();
                console.log("clicked")
                fetch(`/Product/ProductBrandFilter?id=${id}`)
                    .then(x => x.text())
                    .then(x => {
                        document.querySelector(".productscontainer").innerHTML = x;
                    })
            });
        })
    </script>
}

